---
- name: Check if PiVPN is installed.
  stat:
    path: /etc/pivpn/wireguard/setupVars.conf
  register: wireguard_vars

- name: Install PiVPN.
  when: not wireguard_vars.stat.exists
  block:
    - name: Download PiVPN script.
      get_url:
        url: "https://raw.githubusercontent.com/pivpn/pivpn/master/auto_install/install.sh"
        dest: "/tmp/install.sh"
        mode: "0750"

    - include_tasks: "{{ playbook_dir }}/../tasks/network.yml"

    - name: Write variables to options.conf.
      template:
        src: "{{ playbook_dir }}/../templates/pivpn/options.conf.j2"
        dest: /tmp/options.conf
        mode: "0640"

    - name: Run install.sh with unattended flag.
      command: "/tmp/install.sh --unattended /tmp/options.conf"
      changed_when: false
      register: result
      retries: 10 # Retry because this task might fail due to unattended-upgrades.
      delay: 20
      until: result is success

    - name: Cleanup installer files.
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "/tmp/install.sh"
        - "/tmp/options.conf"

- name: Get all files in the wireguard peers folder.
  find:
    paths: "{{ wireguard_conf_dir }}/configs"
    patterns: "*.conf"
    file_type: file
  register: found_files

- name: Set variable with existing peer names.
  set_fact:
    existing_peers: "{{ found_files.files | map(attribute='path') | map('basename') | map('regex_replace', '\\.conf$', '') | list }}"

- name: Set variable with peer names to keep.
  set_fact:
    keep_peers: "{{ wireguard_peers | map(attribute='name') | list }}"

- name: Remove peers that are not in the keep list.
  command: "pivpn -r {{ item }} -y"
  when: item not in keep_peers
  with_items: "{{ existing_peers }}"

- name: Add peers that are in the keep list.
  command: "pivpn -a -n {{ item.name }} -ip {{ item.wireguard_addresses[0].split('/')[0] }}"
  with_items: "{{ wireguard_peers }}"
  failed_when: false
  changed_when: false
